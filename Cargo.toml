[package]
name = "dreamengine"
version = "0.11.0-dev"
edition = "2021"
categories = ["game-engines", "graphics", "gui", "rendering"]
description = "A refreshingly simple data-driven game engine and app framework"
exclude = ["assets/", "tools/", ".github/", "crates/", "examples/wasm/assets/"]
homepage = "https://bevyengine.org"
keywords = ["game", "engine", "gamedev", "graphics", "baddreams"]
license = "MIT OR Apache-2.0"
readme = "README.md"
repository = "https://github.com/lxchn1v1/DreamEngine"
rust-version = "1.70.0"

[workspace]
exclude = [
  "benches",
  "crates/bevy_ecs_compile_fail_tests",
  "crates/bevy_macros_compile_fail_tests",
  "crates/bevy_reflect_compile_fail_tests",
]
members = [
  "crates/*",
  "tools/ci",
  "tools/build-templated-pages",
  "tools/build-wasm-example",
  "tools/example-showcase",
  "errors",
]

[features]
default = [
  "animation",
  "bevy_asset",
  "bevy_audio",
  "bevy_gilrs",
  "bevy_scene",
  "bevy_winit",
  "bevy_core_pipeline",
  "bevy_pbr",
  "bevy_gltf",
  "bevy_render",
  "bevy_sprite",
  "bevy_text",
  "bevy_ui",
  "png",
  "hdr",
  "ktx2",
  "zstd",
  "vorbis",
  "x11",
  "filesystem_watcher",
  "bevy_gizmos",
  "android_shared_stdcxx",
  "tonemapping_luts",
  "default_font",
  "webgl2",
]

# Force dynamic linking, which improves iterative compile times
dynamic_linking = ["bevy_dylib", "bevy_internal/dynamic_linking"]

# Provides animation functionality
bevy_animation = ["bevy_internal/bevy_animation"]

# Provides asset functionality
bevy_asset = ["bevy_internal/bevy_asset"]

# Provides audio functionality
bevy_audio = ["bevy_internal/bevy_audio"]

# Provides cameras and other basic render pipeline features
bevy_core_pipeline = ["bevy_internal/bevy_core_pipeline", "bevy_asset", "bevy_render"]

# Plugin for dynamic loading (using [libloading](https://crates.io/crates/libloading))
bevy_dynamic_plugin = ["bevy_internal/bevy_dynamic_plugin"]

# Adds gamepad support
bevy_gilrs = ["bevy_internal/bevy_gilrs"]

# [glTF](https://www.khronos.org/gltf/) support
bevy_gltf = ["bevy_internal/bevy_gltf", "bevy_asset", "bevy_scene", "bevy_pbr"]

# Adds PBR rendering
bevy_pbr = ["bevy_internal/bevy_pbr", "bevy_asset", "bevy_render", "bevy_core_pipeline"]

# Provides rendering functionality
bevy_render = ["bevy_internal/bevy_render"]

# Provides scene functionality
bevy_scene = ["bevy_internal/bevy_scene", "bevy_asset"]

# Provides sprite functionality
bevy_sprite = ["bevy_internal/bevy_sprite", "bevy_render", "bevy_core_pipeline"]

# Provides text functionality
bevy_text = ["bevy_internal/bevy_text", "bevy_asset", "bevy_sprite"]

# A custom ECS-driven UI framework
bevy_ui = ["bevy_internal/bevy_ui", "bevy_core_pipeline", "bevy_text", "bevy_sprite"]

# winit window and input backend
bevy_winit = ["bevy_internal/bevy_winit"]

# Adds support for rendering gizmos
bevy_gizmos = ["bevy_internal/bevy_gizmos"]

# Tracing support, saving a file in Chrome Tracing format
trace_chrome = ["trace", "bevy_internal/trace_chrome"]

# Tracing support, exposing a port for Tracy
trace_tracy = ["trace", "bevy_internal/trace_tracy"]

# Tracing support, with memory profiling, exposing a port for Tracy
trace_tracy_memory = ["trace", "bevy_internal/trace_tracy", "bevy_internal/trace_tracy_memory"]

# Tracing support
trace = ["bevy_internal/trace"]

# Save a trace of all wgpu calls
wgpu_trace = ["bevy_internal/wgpu_trace"]

# EXR image format support
exr = ["bevy_internal/exr"]

# HDR image format support
hdr = ["bevy_internal/hdr"]

# PNG image format support
png = ["bevy_internal/png"]

# TGA image format support
tga = ["bevy_internal/tga"]

# JPEG image format support
jpeg = ["bevy_internal/jpeg"]

# BMP image format support
bmp = ["bevy_internal/bmp"]

# WebP image format support
webp = ["bevy_internal/webp"]

# Basis Universal compressed texture support
basis-universal = ["bevy_internal/basis-universal"]

# DDS compressed texture support
dds = ["bevy_internal/dds"]

# KTX2 compressed texture support
ktx2 = ["bevy_internal/ktx2"]

# PNM image format support, includes pam, pbm, pgm and ppm
pnm = ["bevy_internal/pnm"]

# For KTX2 supercompression
zlib = ["bevy_internal/zlib"]

# For KTX2 supercompression
zstd = ["bevy_internal/zstd"]

# FLAC audio format support
flac = ["bevy_internal/flac"]

# MP3 audio format support
mp3 = ["bevy_internal/mp3"]

# OGG/VORBIS audio format support
vorbis = ["bevy_internal/vorbis"]

# WAV audio format support
wav = ["bevy_internal/wav"]

# MP3 audio format support (through minimp3)
minimp3 = ["bevy_internal/minimp3"]

# AAC audio format support (through symphonia)
symphonia-aac = ["bevy_internal/symphonia-aac"]

# AAC, FLAC, MP3, MP4, OGG/VORBIS, and WAV audio formats support (through symphonia)
symphonia-all = ["bevy_internal/symphonia-all"]

# FLAC audio format support (through symphonia)
symphonia-flac = ["bevy_internal/symphonia-flac"]

# MP4 audio format support (through symphonia)
symphonia-isomp4 = ["bevy_internal/symphonia-isomp4"]

# OGG/VORBIS audio format support (through symphonia)
symphonia-vorbis = ["bevy_internal/symphonia-vorbis"]

# WAV audio format support (through symphonia)
symphonia-wav = ["bevy_internal/symphonia-wav"]

# Enable watching file system for asset hot reload
filesystem_watcher = ["bevy_internal/filesystem_watcher"]

# Enable serialization support through serde
serialize = ["bevy_internal/serialize"]

# Wayland display server support
wayland = ["bevy_internal/wayland"]

# X11 display server support
x11 = ["bevy_internal/x11"]

# Enable rendering of font glyphs using subpixel accuracy
subpixel_glyph_atlas = ["bevy_internal/subpixel_glyph_atlas"]

# Enable systems that allow for automated testing on CI
bevy_ci_testing = ["bevy_internal/bevy_ci_testing"]

# Enable the "debug asset server" for hot reloading internal assets
debug_asset_server = ["bevy_internal/debug_asset_server"]

# Enable animation support, and glTF animation loading
animation = ["bevy_internal/animation", "bevy_animation"]

# Enable using a shared stdlib for cxx on Android
android_shared_stdcxx = ["bevy_internal/android_shared_stdcxx"]

# Enable detailed trace event logging. These trace events are expensive even when off, thus they require compile time opt-in
detailed_trace = ["bevy_internal/detailed_trace"]

# Include tonemapping Look Up Tables KTX2 files
tonemapping_luts = ["bevy_internal/tonemapping_luts"]

# Enable AccessKit on Unix backends (currently only works with experimental screen readers and forks.)
accesskit_unix = ["bevy_internal/accesskit_unix"]

# Enable assertions to check the validity of parameters passed to glam
glam_assert = ["bevy_internal/glam_assert"]

# Include a default font, containing only ASCII characters, at the cost of a 20kB binary size increase
default_font = ["bevy_internal/default_font"]

# Enable support for shaders in GLSL
shader_format_glsl = ["bevy_internal/shader_format_glsl"]

# Enable support for shaders in SPIR-V
shader_format_spirv = ["bevy_internal/shader_format_spirv"]

# Enable some limitations to be able to use WebGL2. If not enabled, it will default to WebGPU in Wasm
webgl2 = ["bevy_internal/webgl"]

[dependencies]
bevy_dylib = { path = "crates/dreamengine_dylib", version = "0.10.1", default-features = false, optional = true }
bevy_internal = { path = "crates/dreamengine_internal", version = "0.10.1", default-features = false }

[dev-dependencies]
anyhow = "1.0.4"
rand = "0.8.0"
ron = "0.8.0"
serde = { version = "1", features = ["derive"] }
bytemuck = "1.7"
# Needed to poll Task examples
futures-lite = "1.11.3"
crossbeam-channel = "0.5.0"


[profile.wasm-release]
inherits = "release"
opt-level = "z"
lto = "fat"
codegen-units = 1

[profile.stress-test]
inherits = "release"
lto = "fat"
panic = "abort"
